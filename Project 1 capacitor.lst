                  2   $LIST
0000              4   
0000              5   
0000              6   START_BUTTON     equ P0.0
0000              7   P1_BUTTON                equ     P2.4
0000              8   P2_BUTTON            equ         P2.6
0000              9   
0000             10   CLK           EQU 22118400
0000             11   TIMER0_RATE   EQU 4096     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000             12   TIMER0_RELOAD EQU ((65536-(CLK/TIMER1_RATE)))
0000             13   TIMER1_RATE   EQU 4200     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000             14   TIMER1_RELOAD EQU ((65536-(CLK/TIMER1_RATE)))
0000             15   TIMER1_RATE1   EQU 4000                 ;2000Hz frequency lose frequency
0000             16   TIMER2_RATE   EQU 4200                 ;2100Hz frequency win frequency
0000             17   TIMER1_RELOAD1 EQU ((65536-(CLK/TIMER1_RATE1)))
0000             18   TIMER2_RELOAD EQU ((65536-(CLK/TIMER2_RATE)))
0000             19   
0000             20   org 0000H
0000 020496      21      ljmp MyProgram
0003             22   
000B             23   org 0x000B
000B 0203CB      24            ljmp Timer0_ISR
000E             25   
0030             26   DSEG at 30H
0030             27   x:   ds 4
0034             28   y:   ds 4
0038             29   seed: ds 4  
003C             30   bcd: ds 5
0041             31   p1points: ds 1
0042             32   p2points: ds 1
0043             33   T0ov: ds 2
0045             34   T2ov: ds 2
0047             35   freq1: ds 4
004B             36   freq2: ds 4
004F             37   
0000             38   BSEG
0000             39   mf: dbit 1
0001             40   p1_press: dbit 1
0002             41   p2_press: dbit 1
0003             42   
000E             43   cseg
000E             44   ; These 'equ' must match the hardware wiring
000E             45   LCD_RS equ P3.2
000E             46   ;LCD_RW equ PX.X ; Not used in this code, connect the pin to GND
000E             47   LCD_E  equ P3.3
000E             48   LCD_D4 equ P3.4
000E             49   LCD_D5 equ P3.5
000E             50   LCD_D6 equ P3.6
000E             51   LCD_D7 equ P3.7
000E             52   SOUND_OUT equ P1.1
000E             53   
000E 506C6179    54   Initial_Message:  db 'Player1:          ', 0
     6572313A
     20202020
     20202020
     202000
0021 506C6179    55   Initial_Message2: db 'Player2:          ', 0
     6572323A
     20202020
     20202020
     202000
0034             56   
0034 57696E6E    57   Winner1_message1: db 'Winner!:D', 0
     6572213A
     4400
003E 4C6F7365    58   Winner1_message2: db 'Loser:P', 0
     723A5000
0046             59   
0046 4C6F7365    60   Winner2_message1: db 'Loser:P', 0
     723A5000
004E 57696E6E    61   Winner2_message2: db 'Winner!:D', 0
     6572213A
     4400
0058             62   
0058 506C6179    63   Playagain       : db 'Play again ?', 0
     20616761
     696E203F
     00
0065 20202020    64   Clear_screen    : db '          ', 0
     20202020
     202000
0070             65   
                570   $LIST
                 68   $LIST
03B2             70   
03B2             71   Timer0_Init:
03B2 E589        72            mov a, TMOD
03B4 54F0        73            anl a, #0xf0 ; 11110000 Clear the bits for timer 0
03B6 4401        74            orl a, #0x01 ; 00000001 Configure timer 0 as 16-timer
03B8 F589        75            mov TMOD, a
03BA 758CEB      76            mov TH0, #high(TIMER0_RELOAD)
03BD 758A6E      77            mov TL0, #low(TIMER0_RELOAD)
03C0             78            ; Set autoreload value
03C0 75F4EB      79            mov RH0, #high(TIMER0_RELOAD)
03C3 75F26E      80            mov RL0, #low(TIMER0_RELOAD)
03C6             81            ; Enable the timer and interrupts
03C6 D2A9        82       setb ET0  ; Enable timer 0 interrupt
03C8 D28C        83       setb TR0  ; Start timer 0
03CA 22          84            ret
03CB             85   
03CB             86   Timer0_ISR:
03CB C28D        87            clr TF0  ; Timer 2 doesn't clear TF2 automatically. Do it in ISR
03CD C0E0        88            push acc
03CF 0543        89            inc T0ov+0
03D1 E543        90            mov a, T0ov+0
03D3 7002        91            jnz Timer0_ISR_done
03D5 0544        92            inc T0ov+1
03D7             93   
03D7             94   Timer0_ISR_done:
03D7 D0E0        95            pop acc
03D9 32          96            reti
03DA             97   
03DA             98   Timer1_Init:
03DA E589        99            mov a, TMOD
03DC 54F0       100            anl a, #0xf0 ; Clear the bits for timer 0
03DE 4401       101            orl a, #0x01 ; Configure timer 0 as 16-timer
03E0 F589       102            mov TMOD, a
03E2 758DEB     103            mov TH1, #high(TIMER1_RELOAD)
03E5 758B6E     104            mov TL1, #low(TIMER1_RELOAD)
03E8            105            ; Set autoreload value
03E8 75F5EB     106            mov RH1, #high(TIMER1_RELOAD)
03EB 75F36E     107            mov RL1, #low(TIMER1_RELOAD)
03EE            108            ; Enable the timer and interrupts
03EE D2AB       109       setb ET1  ; Enable timer 0 interrupt
03F0 C28E       110       clr TR1  ; Start timer 0
03F2 22         111            ret
03F3            112   
03F3            113   ;---------------------------------;
03F3            114   ; ISR for timer 0.  Set to execute;
03F3            115   ; every 1/4096Hz to generate a    ;
03F3            116   ; 2048 Hz square wave at pin P1.1 ;
03F3            117   ;---------------------------------;
03F3            118   Timer1_ISR:
03F3            119            ;clr TF0  ; According to the data sheet this is done for us already.
03F3 B291       120            cpl SOUND_OUT ; Connect speaker to P1.1!
03F5 32         121            reti
03F6            122   
03F6            123   Timer1_Init1:
03F6 E589       124            mov a, TMOD
03F8 54F0       125            anl a, #0xf0 ; Clear the bits for timer 0
03FA 4401       126            orl a, #0x01 ; Configure timer 0 as 16-timer
03FC F589       127            mov TMOD, a
03FE 758DEA     128            mov TH1, #high(TIMER1_RELOAD1)
0401 758B67     129            mov TL1, #low(TIMER1_RELOAD1)
0404            130            ; Set autoreload value
0404 75F5EA     131            mov RH1, #high(TIMER1_RELOAD1)
0407 75F367     132            mov RL1, #low(TIMER1_RELOAD1)
040A            133            ; Enable the timer and interrupts
040A D2AB       134       setb ET1  ; Enable timer 0 interrupt
040C C28E       135       clr TR1  ; Start timer 0
040E 22         136            ret
040F            137   
040F            138   ;---------------------------------;
040F            139   ; ISR for timer 0.  Set to execute;
040F            140   ; every 1/4096Hz to generate a    ;
040F            141   ; 2048 Hz square wave at pin P1.1 ;
040F            142   ;---------------------------------;
040F            143   Timer1_ISR1:
040F            144            ;clr TF0  ; According to the data sheet this is done for us already.
040F B291       145            cpl SOUND_OUT ; Connect speaker to P1.1!
0411 32         146            reti
0412            147   InitTimer2:
0412 75C800     148            mov T2CON, #0 ; Stop timer/counter.  Set as timer (clock input is pin 22.1184MHz).
0415            149            ; Set the reload value on overflow to zero (just in case is not zero)
0415 75CB00     150            mov RCAP2H, #0
0418 75CA00     151            mov RCAP2L, #0
041B D2AD       152            setb ET2
041D 22         153       ret
041E            154   
041E            155   Timer2_ISR:
041E C2CF       156            clr TF2  ; Timer 2 doesn't clear TF2 automatically. Do it in ISR
0420 C0E0       157            push acc
0422 0545       158            inc T2ov+0
0424 E545       159            mov a, T2ov+0
0426 7002       160            jnz Timer2_ISR_done
0428 0546       161            inc T2ov+1
042A            162   Timer2_ISR_done:
042A D0E0       163            pop acc
042C 32         164            reti
042D            165   
042D            166   ;---------------------------------;
042D            167   ; ISR for timer 0.  Set to execute;
042D            168   ; every 1/4096Hz to generate a    ;
042D            169   ; 2048 Hz square wave at pin P1.1 ;
042D            170   ;---------------------------------;
042D            171   
042D            172   
042D            173   Wait1s:
042D 7AB0       174       mov R2, #176
042F 79FA       175   X3: mov R1, #250
0431 78A6       176   X2: mov R0, #166
0433 D8FE       177   X1: djnz R0, X1 ; 3 cycles->3*45.21123ns*166=22.51519us
0435 D9FA       178       djnz R1, X2 ; 22.51519us*250=5.629ms
0437 DAF6       179       djnz R2, X3 ; 5.629ms*176=1.0s (approximately)
0439 22         180       ret
043A            181   
043A            182   random:
043A 853830     183       mov x+0, seed+0
043D 853931     184       mov x+1, seed+1
0440 853A32     185       mov x+2, seed+2
0443 853B33     186       mov x+3, seed+3
0446 7534FD     187            mov y+0, #low (214013 % 0x10000) 
0449 753543     187            mov y+1, #high(214013 % 0x10000) 
044C 753603     187            mov y+2, #low (214013 / 0x10000) 
044F 753700     187            mov y+3, #high(214013 / 0x10000) 
0452 120296     188       lcall mul32
0455 753443     189            mov y+0, #low (2451011 % 0x10000) 
0458 753566     189            mov y+1, #high(2451011 % 0x10000) 
045B 753625     189            mov y+2, #low (2451011 / 0x10000) 
045E 753700     189            mov y+3, #high(2451011 / 0x10000) 
0461 1201E1     190       lcall add32
0464 853038     191       mov seed+0, x+0
0467 853139     192       mov seed+1, x+1
046A 85323A     193       mov seed+2, x+2
046D 85333B     194       mov seed+3, x+3
0470 22         195       ret
0471            196   wait_random:
0471 C002       197            push AR2
0473 AA38       197            mov R2, seed+0
0475 12007B     197            lcall ?Wait_Milli_Seconds
0478 D002       197            pop AR2
047A C002       198            push AR2
047C AA39       198            mov R2, seed+1
047E 12007B     198            lcall ?Wait_Milli_Seconds
0481 D002       198            pop AR2
0483 C002       199            push AR2
0485 AA3A       199            mov R2, seed+2
0487 12007B     199            lcall ?Wait_Milli_Seconds
048A D002       199            pop AR2
048C C002       200            push AR2
048E AA3B       200            mov R2, seed+3
0490 12007B     200            lcall ?Wait_Milli_Seconds
0493 D002       200            pop AR2
0495 22         201       ret
0496            202   
0496            203   MyProgram:
0496 C0E0       204            push acc
0498 7401       204            mov a, #1
049A 14         204            dec a
049B 120101     204            lcall ?Set_Cursor_1 ; Select column and row
049E D0E0       204            pop acc
04A0 C083       205            push dph
04A2 C082       205            push dpl
04A4 C0E0       205            push acc
04A6 90000E     205            mov dptr, #Initial_Message
04A9 1200F4     205            lcall ?Send_Constant_String
04AC D0E0       205            pop acc
04AE D082       205            pop dpl
04B0 D083       205            pop dph
04B2 C0E0       206            push acc
04B4 7401       206            mov a, #1
04B6 14         206            dec a
04B7 1200FF     206            lcall ?Set_Cursor_2 ; Select column and row
04BA D0E0       206            pop acc
04BC C083       207            push dph
04BE C082       207            push dpl
04C0 C0E0       207            push acc
04C2 900021     207            mov dptr, #Initial_Message2
04C5 1200F4     207            lcall ?Send_Constant_String
04C8 D0E0       207            pop acc
04CA D082       207            pop dpl
04CC D083       207            pop dph
04CE D2AF       208       setb EA
04D0 20C5FD     209       jb P4.5, $
04D3 85CD38     210       mov seed+0, TH2
04D6 753901     211       mov seed+1, #0x01
04D9 753A87     212       mov seed+2, #0x87
04DC 85CC3B     213       mov seed+3, TL2
04DF 754100     214       mov p1points, #0x00
04E2 754200     215       mov p2points, #0x00
04E5 0204E8     216       ljmp loop
04E8            217   loop:
04E8 C0E0       218            push acc
04EA 740B       218            mov a, #11
04EC 14         218            dec a
04ED 120101     218            lcall ?Set_Cursor_1 ; Select column and row
04F0 D0E0       218            pop acc
04F2 C000       219            push ar0
04F4 A841       219            mov r0, p1points
04F6 120106     219            lcall ?Display_BCD
04F9 D000       219            pop ar0
04FB C0E0       220            push acc
04FD 740B       220            mov a, #11
04FF 14         220            dec a
0500 1200FF     220            lcall ?Set_Cursor_2 ; Select column and row
0503 D0E0       220            pop acc
0505 C000       221            push ar0
0507 A842       221            mov r0, p2points
0509 120106     221            lcall ?Display_BCD
050C D000       221            pop ar0
050E 208012     222       jb START_BUTTON, start_game
0511 C002       223            push AR2
0513 7A32       223            mov R2, #50
0515 12007B     223            lcall ?Wait_Milli_Seconds
0518 D002       223            pop AR2
051A 208006     224       jb START_BUTTON, start_game
051D 3080FD     225       jnb START_BUTTON, $
0520 0204E8     226       ljmp loop
0523            227   
0523            228   start_game:
0523 C201       229       clr p1_press
0525 C202       230       clr p2_press
0527 C0E0       231            push acc
0529 740B       231            mov a, #11
052B 14         231            dec a
052C 120101     231            lcall ?Set_Cursor_1 ; Select column and row
052F D0E0       231            pop acc
0531 C000       232            push ar0
0533 A841       232            mov r0, p1points
0535 120106     232            lcall ?Display_BCD
0538 D000       232            pop ar0
053A C0E0       233            push acc
053C 740B       233            mov a, #11
053E 14         233            dec a
053F 1200FF     233            lcall ?Set_Cursor_2 ; Select column and row
0542 D0E0       233            pop acc
0544 C000       234            push ar0
0546 A842       234            mov r0, p2points
0548 120106     234            lcall ?Display_BCD
054B D000       234            pop ar0
054D 12043A     235       lcall random
0550 120471     236       lcall wait_random
0553 E539       237       mov a, seed+1
0555 A2E3       238       mov c, acc.3
0557            239       ;mov HLbit, c
0557 4003       240       jc lose_tone
0559 020564     241       ljmp win_tone
055C            242   
055C            243   lose_tone:
055C            244       ;ljmp play_lose
055C 1203DA     245       lcall Timer1_Init
055F C28E       246       clr TR1
0561 020601     247       ljmp start_game_nohit1
0564            248   win_tone: 
0564            249       ;ljmp play_win
0564 1203F6     250       lcall Timer1_Init1
0567 C28E       251       clr TR1
0569 02059E     252       ljmp start_game_hit1
056C            253       
056C            254   checkfreq1:
056C 753470     255            mov y+0, #low (4720 % 0x10000) 
056F 753512     255            mov y+1, #high(4720 % 0x10000) 
0572 753600     255            mov y+2, #low (4720 / 0x10000) 
0575 753700     255            mov y+3, #high(4720 / 0x10000) 
0578            256       ;if freq<4720
0578            257       ;setb freq1flag
0578 854730     258       mov x, freq1
057B 12028C     259       lcall x_lteq_y
057E 200001     260       jb mf, freq1_press
0581 32         261       reti
0582            262   
0582            263   freq1_press:
0582 D201       264       setb p1_press
0584 32         265       reti
0585            266   
0585            267   checkfreq2:
0585 753470     268            mov y+0, #low (4720 % 0x10000) 
0588 753512     268            mov y+1, #high(4720 % 0x10000) 
058B 753600     268            mov y+2, #low (4720 / 0x10000) 
058E 753700     268            mov y+3, #high(4720 / 0x10000) 
0591            269       ;if freq<4720
0591            270       ;setb freq1flag
0591 854B30     271       mov x, freq2
0594 12028C     272       lcall x_lteq_y
0597 200001     273       jb mf, freq2_press
059A 32         274       reti
059B            275   
059B            276   freq2_press:
059B D202       277       setb p2_press
059D 32         278       reti
059E            279   start_game_hit1:
059E 02056C     280       ljmp checkfreq1
05A1 20012A     281       jb p1_press, start_game_hit2
05A4 C002       282            push AR2
05A6 7A32       282            mov R2, #50
05A8 12007B     282            lcall ?Wait_Milli_Seconds
05AB D002       282            pop AR2
05AD 20011E     283       jb p1_press, start_game_hit2
05B0 3001FD     284       jnb p1_press, $
05B3 D28E       285       setb TR1
05B5 E4         286       clr a 
05B6 E541       287       mov a, p1points
05B8 2401       288       add a, #0x01
05BA F542       289       mov p2points, a
05BC B40538     290       cjne a, #0x05, start_jmp1
05BF E4         291       clr a
05C0 C201       292       clr p1_press
05C2 C202       293       clr p2_press
05C4 0205C7     294       ljmp p1win_jmp
05C7            295   
05C7            296   p1win_jmp:
05C7 C201       297       clr p1_press
05C9 C202       298       clr p2_press
05CB 020681     299       ljmp p1win
05CE            300   
05CE            301   start_game_hit2:
05CE 020585     302       ljmp checkfreq2
05D1 2002CA     303       jb p2_press, start_game_hit1
05D4 C002       304            push AR2
05D6 7A32       304            mov R2, #50
05D8 12007B     304            lcall ?Wait_Milli_Seconds
05DB D002       304            pop AR2
05DD 2002BE     305       jb p2_press, start_game_hit1
05E0 3002FD     306       jnb p2_press, $
05E3 D28E       307       setb TR1
05E5 E4         308       clr a 
05E6 E542       309       mov a, p2points
05E8 2401       310       add a, #0x01
05EA F542       311       mov p2points, a
05EC B40508     312       cjne a, #0x05, start_jmp1
05EF C201       313       clr p1_press
05F1 C202       314       clr p2_press
05F3 E4         315       clr a
05F4 0205FA     316       ljmp p2win_jmp
05F7            317   
05F7            318   start_jmp1:
05F7 020523     319       ljmp start_game
05FA            320   
05FA            321   p2win_jmp:
05FA C201       322       clr p1_press
05FC C202       323       clr p2_press
05FE 02070C     324       ljmp p2win
0601            325   
0601            326   start_game_nohit1:
0601 02056C     327       ljmp checkfreq1
0604 200153     328       jb p1_press, start_game_nohit2
0607 C002       329            push AR2
0609 7A32       329            mov R2, #50
060B 12007B     329            lcall ?Wait_Milli_Seconds
060E D002       329            pop AR2
0610 200147     330       jb p1_press, start_game_nohit2
0613 3001FD     331       jnb p1_press, $
0616 C28E       332       clr TR1
0618 E4         333       clr a 
0619 E541       334       mov a, p1points
061B B40003     335       cjne a, #0x00, start_jmpsub1
061E 020523     336       ljmp start_game
0621            337   
0621            338   start_jmpsub1:
0621 F530       339       mov x, a
0623 753401     340            mov y+0, #low (1 % 0x10000) 
0626 753500     340            mov y+1, #high(1 % 0x10000) 
0629 753600     340            mov y+2, #low (1 / 0x10000) 
062C 753700     340            mov y+3, #high(1 / 0x10000) 
062F 120202     341       lcall sub32
0632 E530       342       mov a, x
0634 D4         343       da a
0635 F541       344       mov p1points, a
0637 E4         345       clr a
0638 C201       346       clr p1_press
063A C202       347       clr p2_press
063C            348   
063C            349   start_jmpsub2:
063C F530       350       mov x, a
063E 753401     351            mov y+0, #low (1 % 0x10000) 
0641 753500     351            mov y+1, #high(1 % 0x10000) 
0644 753600     351            mov y+2, #low (1 / 0x10000) 
0647 753700     351            mov y+3, #high(1 / 0x10000) 
064A 120202     352       lcall sub32
064D E530       353       mov a, x
064F D4         354       da a
0650 F542       355       mov p2points, a
0652 E4         356       clr a
0653 C201       357       clr p1_press
0655 C202       358       clr p2_press
0657 02067A     359       ljmp start_jmp
065A            360   
065A            361   start_game_nohit2:
065A 020585     362       ljmp checkfreq2
065D 2002A1     363       jb p2_press, start_game_nohit1
0660 C002       364            push AR2
0662 7A32       364            mov R2, #50
0664 12007B     364            lcall ?Wait_Milli_Seconds
0667 D002       364            pop AR2
0669 200295     365       jb p2_press, start_game_nohit1
066C 3002FD     366       jnb p2_press, $
066F C28E       367       clr TR1
0671 E4         368       clr a 
0672 E542       369       mov a, p2points
0674 B400C5     370       cjne a, #0x00, start_jmpsub2
0677 02067A     371       ljmp start_jmp
067A            372   
067A            373   start_jmp:
067A C201       374       clr p1_press
067C C202       375       clr p2_press
067E 020523     376       ljmp start_game
0681            377   p1win:
0681 C201       378       clr p1_press
0683 C202       379       clr p2_press
0685 C0E0       380            push acc
0687 7409       380            mov a, #9
0689 14         380            dec a
068A 120101     380            lcall ?Set_Cursor_1 ; Select column and row
068D D0E0       380            pop acc
068F C083       381            push dph
0691 C082       381            push dpl
0693 C0E0       381            push acc
0695 900034     381            mov dptr, #Winner1_message1
0698 1200F4     381            lcall ?Send_Constant_String
069B D0E0       381            pop acc
069D D082       381            pop dpl
069F D083       381            pop dph
06A1 C083       382            push dph
06A3 C082       382            push dpl
06A5 C0E0       382            push acc
06A7 90003E     382            mov dptr, #Winner1_message2
06AA 1200F4     382            lcall ?Send_Constant_String
06AD D0E0       382            pop acc
06AF D082       382            pop dpl
06B1 D083       382            pop dph
06B3 C002       383            push AR2
06B5 7A05       383            mov R2, #5
06B7 12007B     383            lcall ?Wait_Milli_Seconds
06BA D002       383            pop AR2
06BC            383   
06BC C0E0       384            push acc
06BE 7401       384            mov a, #1
06C0 14         384            dec a
06C1 120101     384            lcall ?Set_Cursor_1 ; Select column and row
06C4 D0E0       384            pop acc
06C6 C083       385            push dph
06C8 C082       385            push dpl
06CA C0E0       385            push acc
06CC 900058     385            mov dptr, #Playagain
06CF 1200F4     385            lcall ?Send_Constant_String
06D2 D0E0       385            pop acc
06D4 D082       385            pop dpl
06D6 D083       385            pop dph
06D8 C0E0       386            push acc
06DA 7401       386            mov a, #1
06DC 14         386            dec a
06DD 1200FF     386            lcall ?Set_Cursor_2 ; Select column and row
06E0 D0E0       386            pop acc
06E2 C083       387            push dph
06E4 C082       387            push dpl
06E6 C0E0       387            push acc
06E8 900065     387            mov dptr, #Clear_screen
06EB 1200F4     387            lcall ?Send_Constant_String
06EE D0E0       387            pop acc
06F0 D082       387            pop dpl
06F2 D083       387            pop dph
06F4 208012     388       jb START_BUTTON, p1win_jmp2
06F7 C002       389            push AR2
06F9 7A05       389            mov R2, #5
06FB 12007B     389            lcall ?Wait_Milli_Seconds
06FE D002       389            pop AR2
0700 208006     390       jb START_BUTTON, p1win_jmp2
0703 3080FD     391       jnb START_BUTTON, $
0706 0207A4     392       ljmp restart_jmp
0709            393   p1win_jmp2:
0709 020681     394       ljmp p1win
070C            395   p2win: 
070C C201       396       clr p1_press
070E C202       397       clr p2_press
0710 C0E0       398            push acc
0712 7409       398            mov a, #9
0714 14         398            dec a
0715 120101     398            lcall ?Set_Cursor_1 ; Select column and row
0718 D0E0       398            pop acc
071A C083       399            push dph
071C C082       399            push dpl
071E C0E0       399            push acc
0720 900046     399            mov dptr, #Winner2_message1
0723 1200F4     399            lcall ?Send_Constant_String
0726 D0E0       399            pop acc
0728 D082       399            pop dpl
072A D083       399            pop dph
072C C0E0       400            push acc
072E 7409       400            mov a, #9
0730 14         400            dec a
0731 1200FF     400            lcall ?Set_Cursor_2 ; Select column and row
0734 D0E0       400            pop acc
0736 C083       401            push dph
0738 C082       401            push dpl
073A C0E0       401            push acc
073C 90004E     401            mov dptr, #Winner2_message2
073F 1200F4     401            lcall ?Send_Constant_String
0742 D0E0       401            pop acc
0744 D082       401            pop dpl
0746 D083       401            pop dph
0748 C002       402            push AR2
074A 7A32       402            mov R2, #50
074C 12007B     402            lcall ?Wait_Milli_Seconds
074F D002       402            pop AR2
0751 C0E0       403            push acc
0753 7401       403            mov a, #1
0755 14         403            dec a
0756 120101     403            lcall ?Set_Cursor_1 ; Select column and row
0759 D0E0       403            pop acc
075B C083       404            push dph
075D C082       404            push dpl
075F C0E0       404            push acc
0761 900058     404            mov dptr, #Playagain
0764 1200F4     404            lcall ?Send_Constant_String
0767 D0E0       404            pop acc
0769 D082       404            pop dpl
076B D083       404            pop dph
076D C0E0       405            push acc
076F 7401       405            mov a, #1
0771 14         405            dec a
0772 1200FF     405            lcall ?Set_Cursor_2 ; Select column and row
0775 D0E0       405            pop acc
0777 C083       406            push dph
0779 C082       406            push dpl
077B C0E0       406            push acc
077D 900065     406            mov dptr, #Clear_screen
0780 1200F4     406            lcall ?Send_Constant_String
0783 D0E0       406            pop acc
0785 D082       406            pop dpl
0787 D083       406            pop dph
0789 208015     407       jb START_BUTTON, p2win_jmp1
078C C002       408            push AR2
078E 7A32       408            mov R2, #50
0790 12007B     408            lcall ?Wait_Milli_Seconds
0793 D002       408            pop AR2
0795 208009     409       jb START_BUTTON, p2win_jmp1
0798 3080FD     410       jnb START_BUTTON, $
079B 0207A4     411       ljmp restart_jmp
079E            412   
079E            413   p1win_jmp1:
079E 020681     414       ljmp p1win
07A1            415   
07A1            416   p2win_jmp1:
07A1 02070C     417       ljmp p2win
07A4            418   
07A4            419   restart_jmp:
07A4 0207A7     420       ljmp restart_game
07A7            421   
07A7            422   restart_game:
07A7 754100     423       mov p1points, #0x00
07AA 754200     424       mov p2points, #0x00
07AD 020523     425       ljmp start_game
07B0            426   
07B0            427   forever_0:
07B0            428       ; synchronize with rising edge of the signal applied to pin P0.0
07B0 C28C       429       clr TR0 ; Stop timer 2
07B2 758A00     430       mov TL0, #0
07B5 758C00     431       mov TH0, #0
07B8 754300     432       mov T0ov+0, #0
07BB 754400     433       mov T0ov+1, #0
07BE C28D       434       clr TF0
07C0 D2CA       435       setb TR2
07C2            436   synch1_0:
07C2 E544       437            mov a, T0ov+1
07C4 54FE       438            anl a, #0xfe
07C6            439   ;        jnz no_signal ; If the count is larger than 0x01ffffffff*45ns=1.16s, we assume there is no signal
07C6 2080F9     440       jb P0.0, synch1_0
07C9            441   synch2_0:    
07C9 E544       442            mov a, T0ov+1
07CB 54FE       443            anl a, #0xfe
07CD            444   ;        jnz no_signal
07CD 3080F9     445       jnb P0.0, synch2_0
07D0            446       
07D0            447       ; Measure the period of the signal applied to pin P0.0
07D0 C28C       448       clr TR0
07D2 758A00     449       mov TL0, #0
07D5 758C00     450       mov TH0, #0
07D8 754300     451       mov T0ov+0, #0
07DB 754400     452       mov T0ov+1, #0
07DE C28D       453       clr TF0
07E0 D28C       454       setb TR0 ; Start timer 2
07E2            455   measure1_0:
07E2 E544       456            mov a, T0ov+1
07E4 54FE       457            anl a, #0xfe
07E6            458   ;        jnz no_signal 
07E6 2080F9     459       jb P0.0, measure1_0
07E9            460     
07E9            461   measure2_0:    
07E9 E544       462            mov a, T0ov+1
07EB 54FE       463            anl a, #0xfe
07ED            464   ;        jnz no_signal
07ED 3080F9     465       jnb P0.0, measure2_0
07F0 C2CA       466       clr TR2 ; Stop timer 2, [T2ov+1, T2ov+0, TH2, TL2] * 45.21123ns is the period
07F2            467   
07F2 8000       468            sjmp skip_this_0
07F4            469            
07F4            470   
07F4            471   ;no_signal:      
07F4            472   ;        Set_Cursor(2, 1)
07F4            473   ;    Send_Constant_String(#No_Signal_Str)
07F4            474   ;    ljmp forever ; Repeat! 
07F4            475   skip_this_0:
07F4            476   
07F4            477            ; Make sure [T2ov+1, T2ov+2, TH2, TL2]!=0
07F4 E58A       478            mov a, TL0
07F6 458C       479            orl a, TH0
07F8 4543       480            orl a, T0ov+0
07FA 4544       481            orl a, T0ov+1
07FC            482   ;        jz no_signal
07FC            483            ; Using integer math, convert the period to frequency:
07FC 858A30     484            mov x+0, TL0
07FF 858C31     485            mov x+1, TH0
0802 854332     486            mov x+2, T0ov+0
0805 854433     487            mov x+3, T0ov+1
0808 75342D     488            mov y+0, #low (45 % 0x10000) 
080B 753500     488            mov y+1, #high(45 % 0x10000) 
080E 753600     488            mov y+2, #low (45 / 0x10000) 
0811 753700     488            mov y+3, #high(45 / 0x10000)  ; One clock pulse is 1/22.1184MHz=45.21123ns
0814 120296     489            lcall mul32
0817            490            
0817 853047     491            mov freq1, x ;(frequency 1)
081A            492   
081A 0207B0     493       ljmp forever_0 ; Repeat! 
081D            494       
081D            495   ;-----------------------------------------------------------------
081D            496   
081D            497   ;timer stuff to measure frequency
081D            498   ;Initializes timer/counter 2 as a 16-bit timer (given code from lab 3)
081D            499   
081D            500            
081D            501   ;---------------------------------;
081D            502   ; Hardware initialization         ;
081D            503   ;---------------------------------;
081D            504   Initialize_All:
081D 120412     505       lcall InitTimer2
0820 1200CA     506       lcall LCD_4BIT ; Initialize LCD
0823 D2AF       507       setb EA
0825 22         508            ret
0826            509            
0826            510   forever:
0826            511       ; synchronize with rising edge of the signal applied to pin P0.0
0826 C2CA       512       clr TR2 ; Stop timer 2
0828 75CC00     513       mov TL2, #0
082B 75CD00     514       mov TH2, #0
082E 754500     515       mov T2ov+0, #0
0831 754600     516       mov T2ov+1, #0
0834 C2CF       517       clr TF2
0836 D2CA       518       setb TR2
0838            519   synch1:
0838 E546       520            mov a, T2ov+1
083A 54FE       521            anl a, #0xfe
083C            522   ;        jnz no_signal ; If the count is larger than 0x01ffffffff*45ns=1.16s, we assume there is no signal
083C 2080F9     523       jb P0.0, synch1
083F            524   synch2:    
083F E546       525            mov a, T2ov+1
0841 54FE       526            anl a, #0xfe
0843            527   ;        jnz no_signal
0843 3080F9     528       jnb P0.0, synch2
0846            529       
0846            530       ; Measure the period of the signal applied to pin P0.0
0846 C2CA       531       clr TR2
0848 75CC00     532       mov TL2, #0
084B 75CD00     533       mov TH2, #0
084E 754500     534       mov T2ov+0, #0
0851 754600     535       mov T2ov+1, #0
0854 C2CF       536       clr TF2
0856 D2CA       537       setb TR2 ; Start timer 2
0858            538   measure1:
0858 E546       539            mov a, T2ov+1
085A 54FE       540            anl a, #0xfe
085C            541   ;        jnz no_signal 
085C 2080F9     542       jb P0.0, measure1
085F            543   measure2:    
085F E546       544            mov a, T2ov+1
0861 54FE       545            anl a, #0xfe
0863            546   ;        jnz no_signal
0863 3080F9     547       jnb P0.0, measure2
0866 C2CA       548       clr TR2 ; Stop timer 2, [T2ov+1, T2ov+0, TH2, TL2] * 45.21123ns is the period
0868            549   
0868 8000       550            sjmp skip_this
086A            551   ;no_signal:      
086A            552   ;        Set_Cursor(2, 1)
086A            553   ;    Send_Constant_String(#No_Signal_Str)
086A            554   ;    ljmp forever ; Repeat! 
086A            555   skip_this:
086A            556   
086A            557            ; Make sure [T2ov+1, T2ov+2, TH2, TL2]!=0
086A E5CC       558            mov a, TL2
086C 45CD       559            orl a, TH2
086E 4545       560            orl a, T2ov+0
0870 4546       561            orl a, T2ov+1
0872            562   ;        jz no_signal
0872            563            ; Using integer math, convert the period to frequency:
0872 85CC30     564            mov x+0, TL2
0875 85CD31     565            mov x+1, TH2
0878 854532     566            mov x+2, T2ov+0
087B 854633     567            mov x+3, T2ov+1
087E 75342D     568            mov y+0, #low (45 % 0x10000) 
0881 753500     568            mov y+1, #high(45 % 0x10000) 
0884 753600     568            mov y+2, #low (45 / 0x10000) 
0887 753700     568            mov y+3, #high(45 / 0x10000)  ; One clock pulse is 1/22.1184MHz=45.21123ns
088A 120296     569            lcall mul32
088D            570            
088D 85304B     571            mov freq2, x
0890            572   
0890 020826     573       ljmp forever ; Repeat! 
0893            574   
0893            575   
0893            576   en
